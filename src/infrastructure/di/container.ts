import 'reflect-metadata';
import { container } from 'tsyringe';
import { TaskRepository } from '../../domain/repositories/TaskRepository';
import { UserRepository } from '../../domain/repositories/UserRepository';
import { FirestoreTaskRepository } from '../persistence/firestore/FirestoreTaskRepository';
import { FirestoreUserRepository } from '../persistence/firestore/FirestoreUserRepository';
import { CreateTaskUseCase } from '../../application/usecases/task/CreateTaskUseCase';
import { UpdateTaskUseCase } from '../../application/usecases/task/UpdateTaskUseCase';
import { DeleteTaskUseCase } from '../../application/usecases/task/DeleteTaskUseCase';
import { GetTasksUseCase } from '../../application/usecases/task/GetTasksUseCase';
import { CreateUserUseCase } from '../../application/usecases/user/CreateUserUseCase';
import { FindUserUseCase } from '../../application/usecases/user/FindUserUseCase';
import { FirestoreCategoryRepository } from '../persistence/firestore/FirestoreCategoryRepository';
import { CategoryRepository } from '../../domain/repositories/CategoryRepository';
import { CreateCategoryUseCase } from '../../application/usecases/category/CreateCategoryUseCase';
import { UpdateCategoryUseCase } from '../../application/usecases/category/UpdateCategoryUseCase';

container.registerSingleton<TaskRepository>('TaskRepository', FirestoreTaskRepository);
container.registerSingleton<UserRepository>('UserRepository', FirestoreUserRepository);
container.registerSingleton<CategoryRepository>('CategoryRepository', FirestoreCategoryRepository);
container.registerSingleton(CreateTaskUseCase);
container.registerSingleton(UpdateTaskUseCase);
container.registerSingleton(DeleteTaskUseCase);
container.registerSingleton(GetTasksUseCase);
container.registerSingleton(CreateUserUseCase);
container.registerSingleton(FindUserUseCase);
container.registerSingleton(CreateCategoryUseCase);
container.registerSingleton(UpdateCategoryUseCase);
